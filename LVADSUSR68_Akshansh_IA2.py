# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wuh39x1cPh90LKYSrl2zED2xsAzuXPiz
"""

#1
import numpy as np

def rgb_to_grayscale(rgb_image):
    R = rgb_image[:,:,0]
    G = rgb_image[:,:,1]
    B = rgb_image[:,:,2]

    grayscale_image = 0.2989 * R + 0.5870 * G + 0.1140 * B

    return grayscale_image.astype(np.uint8)

rgb_image = np.array([[[255, 0, 0], [0, 255, 0], [0, 0, 255]],
                      [[255, 255, 0], [255, 0, 255], [0, 255, 255]],
                      [[127, 127, 127], [200, 200, 200], [50, 50, 50]]])

grayscale_image = rgb_to_grayscale(rgb_image)

print("Grayscale image:")
print(grayscale_image)

#2
import numpy as np

def normalize_data(data):
    means = np.mean(data, axis=0)
    stds = np.std(data, axis=0)

    normalized_data = (data - means) / stds

    return normalized_data

#3
import numpy as np
data = np.random.rand(3, 4, 5)

flattened_data = [sensor.flatten() for sensor in data]

combined_data = np.stack(flattened_data, axis=0)

reshaped_data = combined_data.reshape(data.shape[0], -1)


print(reshaped_data)

#4
import numpy as np

data = np.array([[9, 15, 25],
                 [12, 23, 28],
                 [8, 12, 32]])
first_game_scores = data[:, 0]
last_game_scores = data[:, -1]
improvement = last_game_scores - first_game_scores
for i, imp in enumerate(improvement):
    print(f"Athlete {i+1}: Improvement = {imp}")

#5
import numpy as np

data = np.array([[9, 15, 25, 23, 34],
                 [12, 23, 28, 45, 34],
                 [8, 12, 32, 56, 34]])

filtered_data = np.where(data[:, -3:] != -1, data[:, -3:], 0)

non_exempt_counts = np.sum(filtered_data != 0, axis=1)
averages = np.sum(filtered_data, axis=1) / non_exempt_counts

print(averages)

#7
import pandas as pd

data = {
    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
    'Age': [25, 30, 35, 40, 45, 50, 55],
    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
    'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']
}

df = pd.DataFrame(data)

filt = (df['Age'] < 45) & (df['Department'] != 'HR')
result = df.loc[filt, ['Name', 'City']]

print(result)

#8
import pandas as pd
data={
    'Fruit' : ['Apple','Banana','Cherries','Dates','Elderberries','Flour','Grapes'],
    'Category' : ['Fruit','Fruit','Fruit','Fruit','Fruit','Bakery','Fruit'],
    'Price' : [1.20, 0.5,3, 2.5, 4.0, 1.5, 2.0],
    'Promotion' :[True,False,True,True,False,True,False]
    }

market=pd.DataFrame(data)
# print(market)
filt=(market['Category'=='Fruit']) & (market['Promotion'==False]) & (market[])
print(market.loc(filt))